extends layout

title='Members'
block content
  h1 Members Area
  p Welcome to the members area

  #members
    script(type='text/babel').

      const Input = (props)=>{

        const {type, name, initialValue, onUpdate} = props;

        const [value, setValue] = React.useState(initialValue);

        const onBlurHandler = (e)=>{
          setValue(e.target.value);
          onUpdate(e.target.value);
        }

        return(
           <input
           class="form-control"
            type={type}  
            name={name} 
            defaultValue={initialValue}
            onBlur={onBlurHandler}
            />
        );
      }

      const MembersList = () => {

        const [list, setList] = React.useState([])
        
        const loadMemebers = async()=> {
          const response = await fetch("./users/members");
          const data = await response.json();
          setList(data);
        }

        const getPostFormatt = (data)=>(
          {
              method: "POST", 
              headers: {"Content-Type": "application/json"},
              body: JSON.stringify(data),
          }
        )

        const updateMember = async(key, value, id)=>{
          
          const data ={id};
          data[key] = value;
          
          const response = await fetch("./users/update", getPostFormatt(data));
          const res =  await response.json(); 
           
        }

        const deleteUser = async(id)=>{

          const data ={id};
          const res = await fetch("./users/delete", getPostFormatt(data));
          const info =  await res.json();
          console.log(info); 

          if(info.error){
            alert(info.message)
          }

          loadMemebers();

        }

        const onDeleteHandler = (id) =>{
          console.log(id);
          if(confirm("Are you sure?") == true) {
            deleteUser(id)
          } 
        }

        React.useEffect(() => {
          loadMemebers();
        },[]);

        return (
          <table class="table">
            <thead>
              <tr>
              <th scope="col"> </th>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">User</th>
                <th scope="col">Contact</th>
                <th scope="col">Delete</th>
              </tr>
            </thead>
            <tbody>
            {list.map((item, index)=>{
              const {name, email, uname , contact, _id, profileimage} = item;
              const imagePath =  `./users/img/${profileimage}`

              return(
                <tr>
                 <td> <img class="profile" src={imagePath}/></td>
                <td>  {index+1}</td>
                <td><Input 
                type="text" 
                name="name" 
                initialValue={name} 
                onUpdate={(value)=>updateMember('name', value, _id)}/></td>
                <td><Input 
                type="text" 
                name="email" 
                initialValue={email} 
                onUpdate={(value)=>updateMember('email', value, _id)}/></td>
                <td><Input 
                type="text" 
                name="uname" 
                initialValue={uname}
                onUpdate={(value)=>updateMember('uname', value, _id)}/></td>
                <td><Input 
                type="text" 
                name="contact" 
                initialValue={contact}
                onUpdate={(value)=>updateMember('contact', value, _id)}/></td>
                <td>
                  <button type="button" class="btn btn-secondary" onClick={()=>onDeleteHandler(_id)}>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                      <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"></path>
                      <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"></path>
                    </svg>
                  </button>
                </td>
              </tr>
              )
            })}
            </tbody>
          </table>
        );
      
      };

      ReactDOM.render(<MembersList />, document.getElementById('members'));
